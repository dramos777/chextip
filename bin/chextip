#!/usr/bin/env bash

ENV_CONF="../config/env.conf"
F_ENVIROMENT="../var/enviroment"
DIRVAR="../var"
DIRLOG="../log"
DIRTMP="../tmp"

OPTIONS="
#################################
    -h --help    Show this menu

    enviroment   Create enviroment to be configured
                 Ex: ./chextip enviroment

#################################
    Examples:
        ./chextip 3090 linksys/spa3000

"

[ ! -d "$DIRLOG" ] && mkdir "$DIRLOG"
[ ! -d "$DIRTMP" ] && mkdir "$DIRTMP"
[ ! -d "$DIRVAR" ] && mkdir "$DIRVAR"


case $1 in
            -h) echo "$OPTIONS" && exit 0 ;;
        --help) echo "$OPTIONS" && exit 0 ;;
    enviroment) cat "$ENV_CONF" > "$F_ENVIROMENT" && exit 0 ;;
esac

[ ! -f $F_ENVIROMENT ] && echo "Enviroment file not found! type: ./chextip --help" && exit 1

source "../var/enviroment"

MODEL=""
[ ! -z "$2" ] && MODEL="$(echo $2)"

#Ensure at least one argument
[ -z "$1" ] && echo "Argument needed!" && exit 1
[ ! -d "$DIRLOG" ] && mkdir -p "$DIRLOG"

#Ensure sshpass is installed
which sshpass 2>&1>/dev/null
[ "$?" = "1" ] && apt update && apt install sshpass -y

#Ensure telnet is installed
which telnet 2>&1>/dev/null
[ "$?" = "1" ] && apt update && apt install telnet -y

#Error test
if [ ! -f "$F_FUNCTION" ]; then
  	echo "$F_FUNCTION file not found!" && exit 1
    elif
	 [ ! -f "$F_ENVIROMENT" ]; then
  	echo "$F_ENVIROMENT file not found!" && exit 1
    elif
	 [ ! -f "$INVENTORY" ]; then
  	echo "$INVENTORY file not found!" && exit 1
fi

#Importing functions
    source "$F_FUNCTION"

###### Ensure correct variables in $F_ENVIROMENT #####
#Phone extension number
sed -i "s/PHONE_EXTENSION.*/PHONE_EXTENSION="$(echo $1)"/g" $F_ENVIROMENT

#RouterOS IP
SSH_HOST="$(grep "$1" "$INVENTORY" | grep -E -o '([0-9]{1,3}\.){3}[0-9]{1,3}')"

#Ensure extension is in inventory
[  "$?" != 0 ] && echo "Phone Extension $1 not found." && exit 1

sed -i "s/SSH_HOST.*/SSH_HOST="$(echo $SSH_HOST)"/g" $F_ENVIROMENT

#ATA IPS to swap for
sed -i "s/ATAIP=.*/ATAIP=192.168."$(echo $SSH_HOST|cut -d"." -f3).31:192.168."$(echo $SSH_HOST|cut -d"." -f3).32:192.168."$(echo $SSH_HOST|cut -d"." -f3).33:192.168."$(echo $SSH_HOST|cut -d"." -f3).34:192.168."$(echo $SSH_HOST|cut -d"." -f3).35:192.168."$(echo $SSH_HOST|cut -d"." -f3).36:192.168."$(echo $SSH_HOST|cut -d"." -f3).37"/g" $F_ENVIROMENT

#Command to discovery current ATA IP
SSH_COMMAND="\"\/ip dhcp-server lease print where comment~\\\\\""$(echo $1)"\\\\\""\"
sed -i "s/SSH_COMMAND.*/SSH_COMMAND=$(echo "$SSH_COMMAND")/g" $F_ENVIROMENT

#Importing variables
source $F_ENVIROMENT 2>/dev/null

#Get current ATA IP 
CURRENTATAIP="$(CommandSSH | GrepIP)"
[ "$?" != 0 ] && echo "CommandSSH Failed. Please, check the logs." && exit 1
sed -i "s/CURRENTATAIP.*/CURRENTATAIP=$(echo $CURRENTATAIP)/g" $F_ENVIROMENT
sed -i "s/URL.*/URL=\"http:\/\/$(echo $CURRENTATAIP)\"/g" $F_ENVIROMENT

#Http data
URL=http:\\\/\\\/"$CURRENTATAIP"

#ATA IP for telent reboot
TELNET_HOST="$(echo $CURRENTATAIP)"
sed -i "s/TELNET_HOST.*/TELNET_HOST=$(echo $CURRENTATAIP)/g" $F_ENVIROMENT

#### Execution ####
#Command to discovery all active ATAs IPs
SSH_COMMAND="/ip dhcp-server lease print"
ATAIPS="$(CommandSSH | GrepIP)"
[ "$?" != 0 ] && echo "CommandSSH Failed. Please, check the logs." && exit 1

#Comparing active IPs and IPs to change
for ip in $(echo $ATAIP | tr ":" "\n");do
    if echo $ATAIPS | grep -wq $ip
    then
        continue
    else
        ATAIP=$(echo "$ip") && break
    fi
done

#Remove connections
SSH_COMMAND="/ip firewall connection remove [find]"
CommandSSH
[ "$?" != 0 ] && echo "CommandSSH Failed. Please, check the logs." && exit 1

#Changing variable SSH_COMMAND to change ATA IP Address
SSH_COMMAND="/ip dhcp-server lease set address="$(echo $ATAIP)" [find where comment~\""$(echo $PHONE_EXTENSION)"\"]"

#Rebooting ATA
if [ ! -z "$MODEL" ]; then
	case "$MODEL" in
	           linksys) Linksys;;
	'intelbras/ata200') source "$VENV" \
				&& cat "$SELENIUM/main.py" | \
				   sed -e "s/URL/$URL/g" \
				       -e "s/HTTP_USER/$HTTP_USER/g" \
				       -e "s/HTTP_PASSWORD/$HTTP_PASSWORD/g" \
				       -e "s/PYTHON_COMMAND/intelbras_ata200/g" > "$DIRTMP/main.py" \
			     	&& python "$DIRTMP/main.py" ;;
			 *) echo "ATA Reboot - Command not found!" && exit 1 ;;
	esac
fi

#Grandstream
[ -z "$MODEL" ] && GreandstreamTelnetReboot 2>&1 >> "$DIRTMP/grandstream"

TMP=$(echo "$DIRTMP/grandstream") 2>/dev/null

GREP="$(grep -o refused $TMP 2>/dev/null)"
[ "$GREP" = refused ] && echo "$TIME $TELNET_HOST Connextion refused!" >> $DIRLOG/$DATE && rm -rf $DIRTMP/* && exit 1

GREP="$(grep -o denied $TMP 2>/dev/null)"
[ "$GREP" = denied ] && echo "$TIME $TELNET_HOST Permission denied!" >> $DIRLOG/$DATE && rm -rf $DIRTMP/* && exit 1

#Changing ATA IP Address
CommandSSH
[ "$?" != 0 ] && echo "CommandSSH Failed. Please, check the logs." && exit 1
rm -rf $DIRTMP/*

