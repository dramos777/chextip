user                 nginx;
pid                  /var/run/nginx.pid;
worker_processes     auto;
worker_rlimit_nofile 65535;

events {
    multi_accept       on;
    worker_connections 65535;
}
 
http {
    charset                utf-8;
    sendfile               on;
    tcp_nopush             on;
    tcp_nodelay            on;
    server_tokens          off;
    log_not_found          off;
    types_hash_max_size    2048;
    types_hash_bucket_size 64;
    client_max_body_size   16M;

    # Logging
    access_log             /var/log/nginx/access.log;
    error_log              /var/log/nginx/error.log warn;

    # SSL
    ssl_session_timeout    1d;
    ssl_session_cache      shared:SSL:10m;
    ssl_session_tickets    off;

    # Diffie-Hellman parameter for DHE ciphersuites
    ssl_dhparam            /etc/nginx/dhparam.pem;

    # Mozilla Intermediate configuration
    ssl_protocols          TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers            EECDH+AESGCM:EDH+AESGCM;
    ssl_ecdh_curve secp384r1;

    # OCSP Stapling
    ssl_stapling           on;
    ssl_stapling_verify    on;

    resolver 1.1.1.1 valid=300s;
    resolver_timeout 5s;

# Disable strict transport security for now. You can uncomment the following
# line if you understand the implications.
#add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";
add_header X-Frame-Options DENY;
add_header X-Content-Type-Options nosniff;
add_header X-XSS-Protection "1; mode=block";

    # Load balancing configuration
    upstream chextip {
        server chextip:5000;
    }

    # NGINX server block for HTTP
    server {
        listen *:80;

        location = / {
            return 301 /login;
        }

        location / {
            proxy_pass http://chextip;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /static/ { 
            alias /app/static/;
        }

        # Redirect all HTTP traffic to HTTPS
        return 301 https://$host$request_uri;
    }

    # NGINX server block for HTTPS
    server {
        listen 443 ssl;

        ssl_certificate     /etc/nginx/certs/fullchain.pem;
        ssl_certificate_key /etc/nginx/certs/privkey.pem;

        location = / {
            return 301 /login;
        }

        location / {
            proxy_pass http://chextip;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /static/ { 
            alias /app/static/;
        }
    }
}

